import { c as create_ssr_component, d as add_attribute, b as each, v as validate_component, e as escape, a as subscribe } from "../../../chunks/ssr.js";
import { F as FilterBar, U as UseCaseGrid } from "../../../chunks/UseCaseGrid.js";
import { marked } from "marked";
import { T as Tooltip } from "../../../chunks/Tooltip.js";
import { f as filteredUseCases } from "../../../chunks/useCases.js";
const css$1 = {
  code: "input.svelte-qu6a9u:focus{outline:none;box-shadow:none}.prose{color:#374151}.prose h1,.prose h2,.prose h3,.prose h4,.prose h5,.prose h6{color:#111827;margin-top:0.5em;margin-bottom:0.25em}.prose p{margin-bottom:0.5em}.prose ul,.prose ol{margin-left:1.5em;margin-bottom:0.5em}.prose li{margin-bottom:0.25em}.prose code{background-color:#f3f4f6;padding:0.125em 0.375em;border-radius:0.25rem;font-size:0.875em;color:#2563eb}.prose pre{background-color:#f3f4f6;padding:1em;border-radius:0.5rem;overflow-x:auto;margin-bottom:0.5em}.prose pre code{background-color:transparent;padding:0;color:#374151}.prose a{color:#2563eb;text-decoration:underline}.prose a:hover{color:#1d4ed8}.prose blockquote{border-left:4px solid #2563eb;padding-left:1em;margin-left:0;margin-bottom:0.5em;color:#6b7280;font-style:italic}.prose strong{font-weight:600;color:#111827}@keyframes svelte-qu6a9u-bounce{0%,80%,100%{transform:translateY(0)}40%{transform:translateY(-4px)}}@keyframes svelte-qu6a9u-fade-in{from{opacity:0;transform:translateY(4px)}to{opacity:1;transform:translateY(0)}}.animate-fade-in{animation:svelte-qu6a9u-fade-in 0.3s ease-out}",
  map: `{"version":3,"file":"ChatSearch.svelte","sources":["ChatSearch.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount, afterUpdate } from \\"svelte\\";\\nimport { fade, slide } from \\"svelte/transition\\";\\nimport { marked } from \\"marked\\";\\nimport { base } from \\"$app/paths\\";\\nimport Tooltip from \\"./ui/Tooltip.svelte\\";\\nlet searchInput = \\"\\";\\nlet inputElement;\\nlet messages = [];\\nlet isLoading = false;\\nlet error = null;\\nlet chatContainer;\\nconst examplePrompts = [\\n  \\"ROI calculation\\",\\n  \\"AI implementation timeline\\",\\n  \\"Best practices\\",\\n  \\"Use case examples\\"\\n];\\nmarked.setOptions({\\n  breaks: true,\\n  gfm: true,\\n  pedantic: false\\n});\\nafterUpdate(() => {\\n  if (chatContainer && messages.length > 0) {\\n    chatContainer.scrollTop = chatContainer.scrollHeight;\\n  }\\n});\\nfunction generateId() {\\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\\n}\\nasync function sendMessage(content) {\\n  if (!content.trim() || isLoading) return;\\n  const userMessage = {\\n    id: generateId(),\\n    role: \\"user\\",\\n    content: content.trim(),\\n    timestamp: /* @__PURE__ */ new Date()\\n  };\\n  messages = [...messages, userMessage];\\n  searchInput = \\"\\";\\n  isLoading = true;\\n  error = null;\\n  try {\\n    const response = await fetch(\`\${base}/api/chat\`, {\\n      method: \\"POST\\",\\n      headers: {\\n        \\"Content-Type\\": \\"application/json\\"\\n      },\\n      body: JSON.stringify({\\n        messages: messages.map((msg) => ({\\n          role: msg.role,\\n          content: msg.content\\n        }))\\n      })\\n    });\\n    const data = await response.json();\\n    if (!response.ok) {\\n      throw new Error(data.error || \`HTTP error! status: \${response.status}\`);\\n    }\\n    const assistantMessage = {\\n      id: generateId(),\\n      role: \\"assistant\\",\\n      content: data.message || \\"Sorry, I couldn't generate a response.\\",\\n      timestamp: /* @__PURE__ */ new Date()\\n    };\\n    messages = [...messages, assistantMessage];\\n  } catch (err) {\\n    error = err instanceof Error ? err.message : \\"An unexpected error occurred\\";\\n    console.error(\\"Chat error:\\", err);\\n  } finally {\\n    isLoading = false;\\n  }\\n}\\nfunction handleSearch() {\\n  if (searchInput.trim()) {\\n    sendMessage(searchInput);\\n  }\\n}\\nfunction handleKeydown(e) {\\n  if (e.key === \\"Enter\\" && !e.shiftKey) {\\n    e.preventDefault();\\n    handleSearch();\\n  }\\n}\\nfunction handlePromptClick(prompt) {\\n  searchInput = prompt;\\n  if (inputElement) {\\n    inputElement.focus();\\n  }\\n}\\nfunction clearChat() {\\n  messages = [];\\n  error = null;\\n  searchInput = \\"\\";\\n  if (inputElement) {\\n    inputElement.focus();\\n  }\\n}\\nfunction formatTime(date) {\\n  return date.toLocaleTimeString(\\"en-US\\", {\\n    hour: \\"numeric\\",\\n    minute: \\"2-digit\\",\\n    hour12: true\\n  });\\n}\\nonMount(() => {\\n  if (inputElement) {\\n    inputElement.focus();\\n  }\\n});\\n<\/script>\\n\\n<div class=\\"w-full\\">\\n\\t<!-- Search Bar -->\\n\\t<div class=\\"bg-white rounded-xl shadow-lg border border-gray-200 transition-all duration-300\\">\\n\\t\\t<div class=\\"relative\\">\\n\\t\\t\\t<div class=\\"flex items-center gap-3 p-4\\">\\n\\t\\t\\t\\t<!-- AI Icon -->\\n\\t\\t\\t\\t<div class=\\"flex-shrink-0\\">\\n\\t\\t\\t\\t\\t<div class=\\"w-10 h-10 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center shadow-sm transform transition-transform duration-200 hover:scale-105\\">\\n\\t\\t\\t\\t\\t\\t<svg class=\\"w-6 h-6 text-white\\" fill=\\"none\\" stroke=\\"currentColor\\" viewBox=\\"0 0 24 24\\">\\n\\t\\t\\t\\t\\t\\t\\t<path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" d=\\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\\" />\\n\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<!-- Search Input -->\\n\\t\\t\\t\\t<div class=\\"flex-1\\">\\n\\t\\t\\t\\t\\t<div class=\\"relative\\">\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\tbind:this={inputElement}\\n\\t\\t\\t\\t\\t\\t\\tbind:value={searchInput}\\n\\t\\t\\t\\t\\t\\t\\ton:keydown={handleKeydown}\\n\\t\\t\\t\\t\\t\\t\\ttype=\\"text\\"\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\"Ask FOX AI anything about AI implementation, ROI, best practices...\\"\\n\\t\\t\\t\\t\\t\\t\\tdisabled={isLoading}\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"w-full pl-10 pr-4 py-2 text-gray-900 placeholder-gray-700 border-0 focus:outline-none focus:ring-0 text-base disabled:opacity-50\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<svg class=\\"absolute left-0 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-600\\" fill=\\"none\\" stroke=\\"currentColor\\" viewBox=\\"0 0 24 24\\">\\n\\t\\t\\t\\t\\t\\t\\t<path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" d=\\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\" />\\n\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<!-- Quick prompts (only show when no messages) -->\\n\\t\\t\\t\\t\\t{#if messages.length === 0 && !searchInput}\\n\\t\\t\\t\\t\\t\\t<div class=\\"flex flex-wrap gap-2 mt-2\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"text-xs text-gray-700\\">Try:</span>\\n\\t\\t\\t\\t\\t\\t\\t{#each examplePrompts as prompt}\\n\\t\\t\\t\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ton:click={() => handlePromptClick(prompt)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"text-xs px-2 py-1 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-full transition-colors\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{prompt}\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<!-- Action Buttons -->\\n\\t\\t\\t\\t<div class=\\"flex items-center gap-2\\">\\n\\t\\t\\t\\t\\t{#if searchInput.trim() && !isLoading}\\n\\t\\t\\t\\t\\t\\t<Tooltip content=\\"Send message\\" placement=\\"bottom\\">\\n\\t\\t\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t\\t\\ton:click={handleSearch}\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium text-sm transition-colors flex items-center gap-2\\"\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t<svg class=\\"w-4 h-4\\" fill=\\"none\\" stroke=\\"currentColor\\" viewBox=\\"0 0 24 24\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" d=\\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t\\t\\t\\tSend\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t</Tooltip>\\n\\t\\t\\t\\t\\t{/if}\\n\\n\\t\\t\\t\\t\\t{#if isLoading}\\n\\t\\t\\t\\t\\t\\t<div class=\\"px-4 py-2 text-gray-700 text-sm flex items-center gap-2\\">\\n\\t\\t\\t\\t\\t\\t\\t<svg class=\\"w-4 h-4 animate-spin\\" fill=\\"none\\" stroke=\\"currentColor\\" viewBox=\\"0 0 24 24\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" d=\\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\\" />\\n\\t\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t\\t\\tThinking...\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{/if}\\n\\n\\t\\t\\t\\t\\t{#if messages.length > 0}\\n\\t\\t\\t\\t\\t\\t<Tooltip content=\\"Clear conversation\\" placement=\\"bottom\\">\\n\\t\\t\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t\\t\\ton:click={clearChat}\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"p-2 hover:bg-gray-100 rounded-lg transition-colors\\"\\n\\t\\t\\t\\t\\t\\t\\t\\taria-label=\\"Clear chat\\"\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t<svg class=\\"w-5 h-5 text-gray-600\\" fill=\\"none\\" stroke=\\"currentColor\\" viewBox=\\"0 0 24 24\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" d=\\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t</Tooltip>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<!-- Chat Messages (shown below search bar when there are messages) -->\\n\\t{#if messages.length > 0}\\n\\t\\t<div \\n\\t\\t\\ttransition:slide={{ duration: 300 }}\\n\\t\\t\\tclass=\\"mt-4 bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden\\"\\n\\t\\t>\\n\\t\\t\\t<div \\n\\t\\t\\t\\tbind:this={chatContainer}\\n\\t\\t\\t\\tclass=\\"max-h-[400px] overflow-y-auto p-4 space-y-4\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t{#each messages as message (message.id)}\\n\\t\\t\\t\\t\\t<div class=\\"flex {message.role === 'user' ? 'justify-end' : 'justify-start'} animate-fade-in\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\"max-w-[80%]\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-start gap-2 {message.role === 'user' ? 'flex-row-reverse' : 'flex-row'}\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Avatar -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center {message.role === 'user' ? 'bg-blue-600' : 'bg-gray-100'}\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{#if message.role === 'user'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<svg class=\\"w-5 h-5 text-white\\" fill=\\"none\\" stroke=\\"currentColor\\" viewBox=\\"0 0 24 24\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" d=\\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<svg class=\\"w-5 h-5 text-blue-600\\" fill=\\"none\\" stroke=\\"currentColor\\" viewBox=\\"0 0 24 24\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" d=\\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Message bubble -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"{message.role === 'user' ? 'bg-blue-600 text-white' : 'bg-gray-100'} px-4 py-3 rounded-lg {message.role === 'user' ? 'rounded-br-sm' : 'rounded-bl-sm'}\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{#if message.role === 'assistant'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"prose prose-sm max-w-none\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{@html marked(message.content)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"whitespace-pre-wrap\\">{message.content}</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-xs {message.role === 'user' ? 'text-blue-100' : 'text-gray-700'} mt-1\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{formatTime(message.timestamp)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/each}\\n\\n\\t\\t\\t\\t<!-- Loading indicator -->\\n\\t\\t\\t\\t{#if isLoading}\\n\\t\\t\\t\\t\\t<div class=\\"flex justify-start animate-fade-in\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\"max-w-[80%]\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-start gap-2\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex-shrink-0 w-8 h-8 rounded-full bg-gray-100 flex items-center justify-center\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<svg class=\\"w-5 h-5 text-blue-600\\" fill=\\"none\\" stroke=\\"currentColor\\" viewBox=\\"0 0 24 24\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" d=\\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"bg-gray-100 px-4 py-3 rounded-lg rounded-bl-sm\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-2\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"animate-pulse flex gap-1\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\\" style=\\"animation-delay: 0ms\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\\" style=\\"animation-delay: 150ms\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"w-2 h-2 bg-gray-600 rounded-full animate-bounce\\" style=\\"animation-delay: 300ms\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Error message -->\\n\\t\\t\\t{#if error}\\n\\t\\t\\t\\t<div class=\\"mx-4 mb-4 p-3 bg-red-50 border border-red-200 rounded-lg text-red-700 text-sm\\">\\n\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-2\\">\\n\\t\\t\\t\\t\\t\\t<svg class=\\"w-5 h-5 flex-shrink-0\\" fill=\\"none\\" stroke=\\"currentColor\\" viewBox=\\"0 0 24 24\\">\\n\\t\\t\\t\\t\\t\\t\\t<path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" d=\\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\\" />\\n\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t\\t<p>{error}</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t{/if}\\n</div>\\n\\n<style>\\n\\t/* Remove default input focus styles */\\n\\tinput:focus {\\n\\t\\toutline: none;\\n\\t\\tbox-shadow: none;\\n\\t}\\n\\n\\t/* Custom styles for markdown content */\\n\\t:global(.prose) {\\n\\t\\tcolor: #374151;\\n\\t}\\n\\t\\n\\t:global(.prose h1),\\n\\t:global(.prose h2),\\n\\t:global(.prose h3),\\n\\t:global(.prose h4),\\n\\t:global(.prose h5),\\n\\t:global(.prose h6) {\\n\\t\\tcolor: #111827;\\n\\t\\tmargin-top: 0.5em;\\n\\t\\tmargin-bottom: 0.25em;\\n\\t}\\n\\t\\n\\t:global(.prose p) {\\n\\t\\tmargin-bottom: 0.5em;\\n\\t}\\n\\t\\n\\t:global(.prose ul),\\n\\t:global(.prose ol) {\\n\\t\\tmargin-left: 1.5em;\\n\\t\\tmargin-bottom: 0.5em;\\n\\t}\\n\\t\\n\\t:global(.prose li) {\\n\\t\\tmargin-bottom: 0.25em;\\n\\t}\\n\\t\\n\\t:global(.prose code) {\\n\\t\\tbackground-color: #f3f4f6;\\n\\t\\tpadding: 0.125em 0.375em;\\n\\t\\tborder-radius: 0.25rem;\\n\\t\\tfont-size: 0.875em;\\n\\t\\tcolor: #2563eb;\\n\\t}\\n\\t\\n\\t:global(.prose pre) {\\n\\t\\tbackground-color: #f3f4f6;\\n\\t\\tpadding: 1em;\\n\\t\\tborder-radius: 0.5rem;\\n\\t\\toverflow-x: auto;\\n\\t\\tmargin-bottom: 0.5em;\\n\\t}\\n\\t\\n\\t:global(.prose pre code) {\\n\\t\\tbackground-color: transparent;\\n\\t\\tpadding: 0;\\n\\t\\tcolor: #374151;\\n\\t}\\n\\t\\n\\t:global(.prose a) {\\n\\t\\tcolor: #2563eb;\\n\\t\\ttext-decoration: underline;\\n\\t}\\n\\t\\n\\t:global(.prose a:hover) {\\n\\t\\tcolor: #1d4ed8;\\n\\t}\\n\\t\\n\\t:global(.prose blockquote) {\\n\\t\\tborder-left: 4px solid #2563eb;\\n\\t\\tpadding-left: 1em;\\n\\t\\tmargin-left: 0;\\n\\t\\tmargin-bottom: 0.5em;\\n\\t\\tcolor: #6b7280;\\n\\t\\tfont-style: italic;\\n\\t}\\n\\t\\n\\t:global(.prose strong) {\\n\\t\\tfont-weight: 600;\\n\\t\\tcolor: #111827;\\n\\t}\\n\\n\\t/* Animation */\\n\\t@keyframes bounce {\\n\\t\\t0%, 80%, 100% {\\n\\t\\t\\ttransform: translateY(0);\\n\\t\\t}\\n\\t\\t40% {\\n\\t\\t\\ttransform: translateY(-4px);\\n\\t\\t}\\n\\t}\\n\\n\\t@keyframes fade-in {\\n\\t\\tfrom {\\n\\t\\t\\topacity: 0;\\n\\t\\t\\ttransform: translateY(4px);\\n\\t\\t}\\n\\t\\tto {\\n\\t\\t\\topacity: 1;\\n\\t\\t\\ttransform: translateY(0);\\n\\t\\t}\\n\\t}\\n\\n\\t:global(.animate-fade-in) {\\n\\t\\tanimation: fade-in 0.3s ease-out;\\n\\t}\\n</style>"],"names":[],"mappings":"AAiSC,mBAAK,MAAO,CACX,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IACb,CAGQ,MAAQ,CACf,KAAK,CAAE,OACR,CAEQ,SAAU,CACV,SAAU,CACV,SAAU,CACV,SAAU,CACV,SAAU,CACV,SAAW,CAClB,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,MAChB,CAEQ,QAAU,CACjB,aAAa,CAAE,KAChB,CAEQ,SAAU,CACV,SAAW,CAClB,WAAW,CAAE,KAAK,CAClB,aAAa,CAAE,KAChB,CAEQ,SAAW,CAClB,aAAa,CAAE,MAChB,CAEQ,WAAa,CACpB,gBAAgB,CAAE,OAAO,CACzB,OAAO,CAAE,OAAO,CAAC,OAAO,CACxB,aAAa,CAAE,OAAO,CACtB,SAAS,CAAE,OAAO,CAClB,KAAK,CAAE,OACR,CAEQ,UAAY,CACnB,gBAAgB,CAAE,OAAO,CACzB,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,MAAM,CACrB,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,KAChB,CAEQ,eAAiB,CACxB,gBAAgB,CAAE,WAAW,CAC7B,OAAO,CAAE,CAAC,CACV,KAAK,CAAE,OACR,CAEQ,QAAU,CACjB,KAAK,CAAE,OAAO,CACd,eAAe,CAAE,SAClB,CAEQ,cAAgB,CACvB,KAAK,CAAE,OACR,CAEQ,iBAAmB,CAC1B,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC9B,YAAY,CAAE,GAAG,CACjB,WAAW,CAAE,CAAC,CACd,aAAa,CAAE,KAAK,CACpB,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,MACb,CAEQ,aAAe,CACtB,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,OACR,CAGA,WAAW,oBAAO,CACjB,EAAE,CAAE,GAAG,CAAE,IAAK,CACb,SAAS,CAAE,WAAW,CAAC,CACxB,CACA,GAAI,CACH,SAAS,CAAE,WAAW,IAAI,CAC3B,CACD,CAEA,WAAW,qBAAQ,CAClB,IAAK,CACJ,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,WAAW,GAAG,CAC1B,CACA,EAAG,CACF,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,WAAW,CAAC,CACxB,CACD,CAEQ,gBAAkB,CACzB,SAAS,CAAE,qBAAO,CAAC,IAAI,CAAC,QACzB"}`
};
function formatTime(date) {
  return date.toLocaleTimeString("en-US", {
    hour: "numeric",
    minute: "2-digit",
    hour12: true
  });
}
const ChatSearch = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let searchInput = "";
  let inputElement;
  let messages = [];
  let chatContainer;
  const examplePrompts = [
    "ROI calculation",
    "AI implementation timeline",
    "Best practices",
    "Use case examples"
  ];
  marked.setOptions({ breaks: true, gfm: true, pedantic: false });
  $$result.css.add(css$1);
  return `<div class="w-full"> <div class="bg-white rounded-xl shadow-lg border border-gray-200 transition-all duration-300"><div class="relative"><div class="flex items-center gap-3 p-4"> <div class="flex-shrink-0" data-svelte-h="svelte-141juyy"><div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center shadow-sm transform transition-transform duration-200 hover:scale-105"><svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path></svg></div></div>  <div class="flex-1"><div class="relative"><input type="text" placeholder="Ask FOX AI anything about AI implementation, ROI, best practices..." ${""} class="w-full pl-10 pr-4 py-2 text-gray-900 placeholder-gray-700 border-0 focus:outline-none focus:ring-0 text-base disabled:opacity-50 svelte-qu6a9u"${add_attribute("this", inputElement, 0)}${add_attribute("value", searchInput, 0)}> <svg class="absolute left-0 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg></div>  ${messages.length === 0 && !searchInput ? `<div class="flex flex-wrap gap-2 mt-2"><span class="text-xs text-gray-700" data-svelte-h="svelte-t1ae9a">Try:</span> ${each(examplePrompts, (prompt) => {
    return `<button class="text-xs px-2 py-1 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-full transition-colors">${escape(prompt)} </button>`;
  })}</div>` : ``}</div>  <div class="flex items-center gap-2">${searchInput.trim() && true ? `${validate_component(Tooltip, "Tooltip").$$render(
    $$result,
    {
      content: "Send message",
      placement: "bottom"
    },
    {},
    {
      default: () => {
        return `<button class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium text-sm transition-colors flex items-center gap-2" data-svelte-h="svelte-rs7r9d"><svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path></svg>
								Send</button>`;
      }
    }
  )}` : ``} ${``} ${messages.length > 0 ? `${validate_component(Tooltip, "Tooltip").$$render(
    $$result,
    {
      content: "Clear conversation",
      placement: "bottom"
    },
    {},
    {
      default: () => {
        return `<button class="p-2 hover:bg-gray-100 rounded-lg transition-colors" aria-label="Clear chat" data-svelte-h="svelte-1woup85"><svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path></svg></button>`;
      }
    }
  )}` : ``}</div></div></div></div>  ${messages.length > 0 ? `<div class="mt-4 bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden"><div class="max-h-[400px] overflow-y-auto p-4 space-y-4"${add_attribute("this", chatContainer, 0)}>${each(messages, (message) => {
    return `<div class="${"flex " + escape(
      message.role === "user" ? "justify-end" : "justify-start",
      true
    ) + " animate-fade-in"}"><div class="max-w-[80%]"><div class="${"flex items-start gap-2 " + escape(
      message.role === "user" ? "flex-row-reverse" : "flex-row",
      true
    )}"> <div class="${"flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center " + escape(message.role === "user" ? "bg-blue-600" : "bg-gray-100", true)}">${message.role === "user" ? `<svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path></svg>` : `<svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path></svg>`}</div>  <div class="${escape(
      message.role === "user" ? "bg-blue-600 text-white" : "bg-gray-100",
      true
    ) + " px-4 py-3 rounded-lg " + escape(
      message.role === "user" ? "rounded-br-sm" : "rounded-bl-sm",
      true
    )}">${message.role === "assistant" ? `<div class="prose prose-sm max-w-none"><!-- HTML_TAG_START -->${marked(message.content)}<!-- HTML_TAG_END --> </div>` : `<p class="whitespace-pre-wrap">${escape(message.content)}</p>`} <p class="${"text-xs " + escape(
      message.role === "user" ? "text-blue-100" : "text-gray-700",
      true
    ) + " mt-1"}">${escape(formatTime(message.timestamp))} </p></div> </div></div> </div>`;
  })}  ${``}</div>  ${``}</div>` : ``} </div>`;
});
const css = {
  code: ".tags-list::-webkit-scrollbar{width:6px}.tags-list::-webkit-scrollbar-track{background:#f3f4f6}.tags-list::-webkit-scrollbar-thumb{background:#d1d5db;border-radius:3px}.tags-list::-webkit-scrollbar-thumb:hover{background:#9ca3af}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import FilterBar from \\"$lib/components/FilterBar.svelte\\";\\nimport UseCaseGrid from \\"$lib/components/UseCaseGrid.svelte\\";\\nimport ChatSearch from \\"$lib/components/ChatSearch.svelte\\";\\nimport Tooltip from \\"$lib/components/ui/Tooltip.svelte\\";\\nimport { filteredUseCases, useCaseFilters, updateFilters, resetFilters, getAllDivisions, getAllTags, getAllStatuses, useCasesStore } from \\"$lib/stores/useCases\\";\\nimport { onMount } from \\"svelte\\";\\nimport { fade, scale } from \\"svelte/transition\\";\\nimport { quintOut } from \\"svelte/easing\\";\\nlet viewMode = \\"grid\\";\\nlet divisions = [];\\nlet tags = [];\\nlet statuses = [];\\nlet selectedDivision = \\"\\";\\nlet selectedTags = [];\\nlet selectedStatus = \\"\\";\\nlet searchQuery = \\"\\";\\nlet loading = true;\\nonMount(async () => {\\n  try {\\n    await useCasesStore.loadUseCases();\\n    divisions = getAllDivisions();\\n    tags = getAllTags();\\n    statuses = getAllStatuses();\\n    const unsubscribe = useCaseFilters.subscribe((filters) => {\\n      selectedDivision = filters.division === \\"all\\" ? \\"\\" : filters.division;\\n      selectedTags = filters.tags;\\n      selectedStatus = filters.status === \\"all\\" ? \\"\\" : filters.status;\\n      searchQuery = filters.search;\\n    });\\n    loading = false;\\n    return unsubscribe;\\n  } catch (error) {\\n    console.error(\\"Error loading page:\\", error);\\n    loading = false;\\n  }\\n});\\nfunction handleFilterChange(event) {\\n  const { type, value } = event.detail;\\n  switch (type) {\\n    case \\"division\\":\\n      updateFilters({ division: value || \\"all\\" });\\n      break;\\n    case \\"tags\\":\\n      updateFilters({ tags: value });\\n      break;\\n    case \\"status\\":\\n      updateFilters({ status: value || \\"all\\" });\\n      break;\\n    case \\"search\\":\\n      updateFilters({ search: value });\\n      break;\\n  }\\n}\\nfunction handleClearFilters() {\\n  resetFilters();\\n}\\nfunction toggleViewMode() {\\n  viewMode = viewMode === \\"grid\\" ? \\"list\\" : \\"grid\\";\\n}\\n$: totalUseCases = $filteredUseCases.length;\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>FOX AI Hub - AI Use Cases Dashboard</title>\\n\\t<meta name=\\"description\\" content=\\"Explore and discover AI use cases across FOX Corporation divisions\\" />\\n</svelte:head>\\n\\n<div class=\\"min-h-screen bg-gray-50\\">\\n\\t<!-- Hero Section -->\\n\\t<section class=\\"bg-gradient-to-br from-blue-600 to-blue-800 text-white\\">\\n\\t\\t<div class=\\"container mx-auto px-4 py-9 sm:py-12 lg:py-15\\">\\n\\t\\t\\t<div class=\\"max-w-4xl mx-auto text-center\\">\\n\\t\\t\\t\\t<Tooltip content=\\"Your centralized platform for discovering, sharing, and scaling AI solutions across FOX Corporation - driving $50M+ in annual value\\" >\\n\\t\\t\\t\\t\\t<h1 class=\\"text-3xl sm:text-4xl lg:text-5xl font-bold mb-4 cursor-help\\">\\n\\t\\t\\t\\t\\t\\tFOX AI Innovation Hub\\n\\t\\t\\t\\t\\t</h1>\\n\\t\\t\\t\\t</Tooltip>\\n\\t\\t\\t\\t<p class=\\"text-lg sm:text-xl text-blue-100 mb-8 leading-relaxed\\">\\n\\t\\t\\t\\t\\tDiscover how AI is transforming FOX Corporation. Explore use cases across all divisions, \\n\\t\\t\\t\\t\\tshare insights, and accelerate innovation through collaboration.\\n\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<!-- Quick Stats -->\\n\\t\\t\\t\\t<div class=\\"grid grid-cols-1 sm:grid-cols-3 gap-6 max-w-2xl mx-auto\\">\\n\\t\\t\\t\\t\\t<Tooltip content=\\"Live count of AI initiatives demonstrating FOX's commitment to innovation - each saving an average of $2M annually\\" >\\n\\t\\t\\t\\t\\t\\t<div \\n\\t\\t\\t\\t\\t\\t\\tclass=\\"bg-white/10 backdrop-blur-sm rounded-lg p-4 cursor-help\\"\\n\\t\\t\\t\\t\\t\\t\\tin:scale={{ duration: 600, delay: 200, start: 0.8, easing: quintOut }}\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"text-3xl font-bold mb-1\\">{totalUseCases}</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"text-sm text-blue-100\\">Active Use Cases</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</Tooltip>\\n\\t\\t\\t\\t\\t<Tooltip content=\\"Cross-functional AI adoption showing enterprise-wide digital transformation\\" >\\n\\t\\t\\t\\t\\t\\t<div \\n\\t\\t\\t\\t\\t\\t\\tclass=\\"bg-white/10 backdrop-blur-sm rounded-lg p-4 cursor-help\\"\\n\\t\\t\\t\\t\\t\\t\\tin:scale={{ duration: 600, delay: 350, start: 0.8, easing: quintOut }}\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"text-3xl font-bold mb-1\\">{divisions.length}</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"text-sm text-blue-100\\">Divisions</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</Tooltip>\\n\\t\\t\\t\\t\\t<Tooltip content=\\"Diverse AI portfolio from NLP to Computer Vision, showcasing technical breadth\\" >\\n\\t\\t\\t\\t\\t\\t<div \\n\\t\\t\\t\\t\\t\\t\\tclass=\\"bg-white/10 backdrop-blur-sm rounded-lg p-4 cursor-help\\"\\n\\t\\t\\t\\t\\t\\t\\tin:scale={{ duration: 600, delay: 500, start: 0.8, easing: quintOut }}\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"text-3xl font-bold mb-1\\">{tags.length}</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"text-sm text-blue-100\\">Technology Tags</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</Tooltip>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Wave decoration -->\\n\\t\\t<div class=\\"relative\\">\\n\\t\\t\\t<svg class=\\"absolute bottom-0 w-full h-8 sm:h-12 lg:h-16\\" preserveAspectRatio=\\"none\\" viewBox=\\"0 0 1440 64\\">\\n\\t\\t\\t\\t<path fill=\\"#f9fafb\\" d=\\"M0,32L48,37.3C96,43,192,53,288,53.3C384,53,480,43,576,37.3C672,32,768,32,864,37.3C960,43,1056,53,1152,53.3C1248,53,1344,43,1392,37.3L1440,32L1440,64L1392,64C1344,64,1248,64,1152,64C1056,64,960,64,864,64C768,64,672,64,576,64C480,64,384,64,288,64C192,64,96,64,48,64L0,64Z\\"></path>\\n\\t\\t\\t</svg>\\n\\t\\t</div>\\n\\t</section>\\n\\t\\n\\t<!-- Main Content -->\\n\\t<main class=\\"container mx-auto px-4 py-8\\">\\n\\t\\t<!-- AI Search Bar -->\\n\\t\\t<div class=\\"mb-8\\">\\n\\t\\t\\t<ChatSearch />\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Filter Section -->\\n\\t\\t<div class=\\"mb-6\\">\\n\\t\\t\\t<div class=\\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-4\\">\\n\\t\\t\\t\\t<h2 class=\\"text-2xl font-semibold text-gray-900\\">Browse Use Cases</h2>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<!-- View Toggle -->\\n\\t\\t\\t\\t<div class=\\"flex items-center gap-2 bg-white rounded-lg border border-gray-200 p-1\\">\\n\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\ton:click={() => viewMode = 'grid'}\\n\\t\\t\\t\\t\\t\\tclass=\\"px-3 py-1.5 rounded-md text-sm font-medium transition-colors\\"\\n\\t\\t\\t\\t\\t\\tclass:bg-blue-600={viewMode === 'grid'}\\n\\t\\t\\t\\t\\t\\tclass:text-white={viewMode === 'grid'}\\n\\t\\t\\t\\t\\t\\tclass:text-gray-600={viewMode !== 'grid'}\\n\\t\\t\\t\\t\\t\\tclass:hover:text-gray-900={viewMode !== 'grid'}\\n\\t\\t\\t\\t\\t\\taria-label=\\"Grid view\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<svg class=\\"w-5 h-5\\" fill=\\"none\\" stroke=\\"currentColor\\" viewBox=\\"0 0 24 24\\">\\n\\t\\t\\t\\t\\t\\t\\t<path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" d=\\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\\" />\\n\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\ton:click={() => viewMode = 'list'}\\n\\t\\t\\t\\t\\t\\tclass=\\"px-3 py-1.5 rounded-md text-sm font-medium transition-colors\\"\\n\\t\\t\\t\\t\\t\\tclass:bg-blue-600={viewMode === 'list'}\\n\\t\\t\\t\\t\\t\\tclass:text-white={viewMode === 'list'}\\n\\t\\t\\t\\t\\t\\tclass:text-gray-600={viewMode !== 'list'}\\n\\t\\t\\t\\t\\t\\tclass:hover:text-gray-900={viewMode !== 'list'}\\n\\t\\t\\t\\t\\t\\taria-label=\\"List view\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<svg class=\\"w-5 h-5\\" fill=\\"none\\" stroke=\\"currentColor\\" viewBox=\\"0 0 24 24\\">\\n\\t\\t\\t\\t\\t\\t\\t<path stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" stroke-width=\\"2\\" d=\\"M4 6h16M4 12h16M4 18h16\\" />\\n\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<!-- Filter Bar -->\\n\\t\\t\\t<FilterBar\\n\\t\\t\\t\\t{divisions}\\n\\t\\t\\t\\t{statuses}\\n\\t\\t\\t\\tavailableTags={tags}\\n\\t\\t\\t\\tbind:selectedDivision\\n\\t\\t\\t\\tbind:selectedTags\\n\\t\\t\\t\\tbind:selectedStatus\\n\\t\\t\\t\\tbind:searchQuery\\n\\t\\t\\t\\ton:filterChange={handleFilterChange}\\n\\t\\t\\t\\ton:clearFilters={handleClearFilters}\\n\\t\\t\\t/>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Results Count -->\\n\\t\\t{#if !loading}\\n\\t\\t\\t<div class=\\"mb-4 text-sm text-gray-600\\">\\n\\t\\t\\t\\tShowing <span class=\\"font-medium text-gray-900\\">{totalUseCases}</span> use case{totalUseCases !== 1 ? 's' : ''}\\n\\t\\t\\t\\t{#if selectedDivision || selectedTags.length > 0 || selectedStatus || searchQuery}\\n\\t\\t\\t\\t\\t<span class=\\"text-gray-500\\">(filtered)</span>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\t\\t\\n\\t\\t<!-- Use Case Grid -->\\n\\t\\t<UseCaseGrid useCases={$filteredUseCases} {viewMode} {loading} />\\n\\t\\t\\n\\t</main>\\n</div>\\n\\n<style>\\n\\t/* Custom scrollbar for filter dropdowns */\\n\\t:global(.tags-list::-webkit-scrollbar) {\\n\\t\\twidth: 6px;\\n\\t}\\n\\t\\n\\t:global(.tags-list::-webkit-scrollbar-track) {\\n\\t\\tbackground: #f3f4f6;\\n\\t}\\n\\t\\n\\t:global(.tags-list::-webkit-scrollbar-thumb) {\\n\\t\\tbackground: #d1d5db;\\n\\t\\tborder-radius: 3px;\\n\\t}\\n\\t\\n\\t:global(.tags-list::-webkit-scrollbar-thumb:hover) {\\n\\t\\tbackground: #9ca3af;\\n\\t}\\n</style>"],"names":[],"mappings":"AAsMS,6BAA+B,CACtC,KAAK,CAAE,GACR,CAEQ,mCAAqC,CAC5C,UAAU,CAAE,OACb,CAEQ,mCAAqC,CAC5C,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,GAChB,CAEQ,yCAA2C,CAClD,UAAU,CAAE,OACb"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let totalUseCases;
  let $filteredUseCases, $$unsubscribe_filteredUseCases;
  $$unsubscribe_filteredUseCases = subscribe(filteredUseCases, (value) => $filteredUseCases = value);
  let viewMode = "grid";
  let divisions = [];
  let tags = [];
  let statuses = [];
  let selectedDivision = "";
  let selectedTags = [];
  let selectedStatus = "";
  let searchQuery = "";
  let loading = true;
  $$result.css.add(css);
  let $$settled;
  let $$rendered;
  let previous_head = $$result.head;
  do {
    $$settled = true;
    $$result.head = previous_head;
    totalUseCases = $filteredUseCases.length;
    $$rendered = `${$$result.head += `<!-- HEAD_svelte-1u1v6ch_START -->${$$result.title = `<title>FOX AI Hub - AI Use Cases Dashboard</title>`, ""}<meta name="description" content="Explore and discover AI use cases across FOX Corporation divisions"><!-- HEAD_svelte-1u1v6ch_END -->`, ""} <div class="min-h-screen bg-gray-50"> <section class="bg-gradient-to-br from-blue-600 to-blue-800 text-white"><div class="container mx-auto px-4 py-9 sm:py-12 lg:py-15"><div class="max-w-4xl mx-auto text-center">${validate_component(Tooltip, "Tooltip").$$render(
      $$result,
      {
        content: "Your centralized platform for discovering, sharing, and scaling AI solutions across FOX Corporation - driving $50M+ in annual value"
      },
      {},
      {
        default: () => {
          return `<h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold mb-4 cursor-help" data-svelte-h="svelte-iuic1l">FOX AI Innovation Hub</h1>`;
        }
      }
    )} <p class="text-lg sm:text-xl text-blue-100 mb-8 leading-relaxed" data-svelte-h="svelte-1gnnkuu">Discover how AI is transforming FOX Corporation. Explore use cases across all divisions, 
					share insights, and accelerate innovation through collaboration.</p>  <div class="grid grid-cols-1 sm:grid-cols-3 gap-6 max-w-2xl mx-auto">${validate_component(Tooltip, "Tooltip").$$render(
      $$result,
      {
        content: "Live count of AI initiatives demonstrating FOX's commitment to innovation - each saving an average of $2M annually"
      },
      {},
      {
        default: () => {
          return `<div class="bg-white/10 backdrop-blur-sm rounded-lg p-4 cursor-help"><div class="text-3xl font-bold mb-1">${escape(totalUseCases)}</div> <div class="text-sm text-blue-100" data-svelte-h="svelte-13gea8f">Active Use Cases</div></div>`;
        }
      }
    )} ${validate_component(Tooltip, "Tooltip").$$render(
      $$result,
      {
        content: "Cross-functional AI adoption showing enterprise-wide digital transformation"
      },
      {},
      {
        default: () => {
          return `<div class="bg-white/10 backdrop-blur-sm rounded-lg p-4 cursor-help"><div class="text-3xl font-bold mb-1">${escape(divisions.length)}</div> <div class="text-sm text-blue-100" data-svelte-h="svelte-lybawx">Divisions</div></div>`;
        }
      }
    )} ${validate_component(Tooltip, "Tooltip").$$render(
      $$result,
      {
        content: "Diverse AI portfolio from NLP to Computer Vision, showcasing technical breadth"
      },
      {},
      {
        default: () => {
          return `<div class="bg-white/10 backdrop-blur-sm rounded-lg p-4 cursor-help"><div class="text-3xl font-bold mb-1">${escape(tags.length)}</div> <div class="text-sm text-blue-100" data-svelte-h="svelte-1jkhhti">Technology Tags</div></div>`;
        }
      }
    )}</div></div></div>  <div class="relative" data-svelte-h="svelte-1e5xrvv"><svg class="absolute bottom-0 w-full h-8 sm:h-12 lg:h-16" preserveAspectRatio="none" viewBox="0 0 1440 64"><path fill="#f9fafb" d="M0,32L48,37.3C96,43,192,53,288,53.3C384,53,480,43,576,37.3C672,32,768,32,864,37.3C960,43,1056,53,1152,53.3C1248,53,1344,43,1392,37.3L1440,32L1440,64L1392,64C1344,64,1248,64,1152,64C1056,64,960,64,864,64C768,64,672,64,576,64C480,64,384,64,288,64C192,64,96,64,48,64L0,64Z"></path></svg></div></section>  <main class="container mx-auto px-4 py-8"> <div class="mb-8">${validate_component(ChatSearch, "ChatSearch").$$render($$result, {}, {}, {})}</div>  <div class="mb-6"><div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-4"><h2 class="text-2xl font-semibold text-gray-900" data-svelte-h="svelte-16k52af">Browse Use Cases</h2>  <div class="flex items-center gap-2 bg-white rounded-lg border border-gray-200 p-1"><button class="${[
      "px-3 py-1.5 rounded-md text-sm font-medium transition-colors",
      "bg-blue-600 text-white  "
    ].join(" ").trim()}" aria-label="Grid view" data-svelte-h="svelte-1td29cs"><svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path></svg></button> <button class="${[
      "px-3 py-1.5 rounded-md text-sm font-medium transition-colors",
      "  text-gray-600 hover:text-gray-900"
    ].join(" ").trim()}" aria-label="List view" data-svelte-h="svelte-f70api"><svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg></button></div></div>  ${validate_component(FilterBar, "FilterBar").$$render(
      $$result,
      {
        divisions,
        statuses,
        availableTags: tags,
        selectedDivision,
        selectedTags,
        selectedStatus,
        searchQuery
      },
      {
        selectedDivision: ($$value) => {
          selectedDivision = $$value;
          $$settled = false;
        },
        selectedTags: ($$value) => {
          selectedTags = $$value;
          $$settled = false;
        },
        selectedStatus: ($$value) => {
          selectedStatus = $$value;
          $$settled = false;
        },
        searchQuery: ($$value) => {
          searchQuery = $$value;
          $$settled = false;
        }
      },
      {}
    )}</div>  ${``}  ${validate_component(UseCaseGrid, "UseCaseGrid").$$render(
      $$result,
      {
        useCases: $filteredUseCases,
        viewMode,
        loading
      },
      {},
      {}
    )}</main> </div>`;
  } while (!$$settled);
  $$unsubscribe_filteredUseCases();
  return $$rendered;
});
export {
  Page as default
};
